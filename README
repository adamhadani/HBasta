HBasta
A Simple wrapper around Thrift HBase API

Requirements
------------
To install, You will need the thrift python library as well as the (generated) hbase python library.

* Thrift

  Thrift can be typically installed e.g by downloading Thrift from project homepage (http://thrift.apache.org/download/)
  and using the Makefile:

        tar xzf thrift-0.5.0.tar.gz
	cd thrift-0.5.0
	./configure && make
	sudo make install

* Thrift python bindings 

  These should be installed automatically when using setuptools (see below on installation instructions)

* hbase generated library

  Run the included 'generate_hbase_py.sh' to generate the hbase python module.
  Afterwards, it should be automatically installed when using setuptools (see below on installation instructions).

  NOTE: This library will by default reflect latest HBase Thrift API from the HBase trunk.
  If you'd like to bundle a different hbase generated API, simply generate it yourself from the appropriate .thrift
  file and then place all the generated files in a folder called 'hbase', under the hbasta project root before installing.


Installing
----------
Installation should be straightforward:

	python setup.py install


Usage
------
The class exposes a simple interface to most of the common HBase operations:

* Create a table

>>> from hbasta import HBasta
>>> client = HBasta('localhost', 9999)
>>> client.create_table('tablename')


* Get a whole / partial row

>>> from hbasta import HBasta
>>> client = HBasta('localhost', 9999)
>>> row = client.get_row('mytable', 'row_key')
>>> print row
{'colfamily:col1': col1_val, ...}
>>> partial_row = client.get_row('mytable', 'row_key', colspec=['colfamily:col2'])
>>> print partial_row
{'colfamily:col2': col2_val}

* Use a scanner

>>> from hbasta import HBasta
>>> client = HBasta('localhost', 9999)
>>> scanner_id = client.scanner_open('mytable', 'row_0_id', colspec=('data',))
>>> for row, cols in client.scanner_get_list(scanner_id, num_rows=100):
...
>>> client.scanner_close(scanner_id)




	

